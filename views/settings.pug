extends layout

block content
  div(class="title-div")
    table
      tbody
        tr
          td
            h1= title
          td(class="navigation")
            a(href='/') Back
  
  div(class="content-div")
    form(id="settings" action="/settings" method="post")
      table(class="settings-table")
        tbody
          tr
            td.settings-name Screen Names
            td
              input(type="text" id="screenName" class="input-style" name="screenName" value=localStorage.getItem('screenName'))
              button(type="button" id="add" class="button-style") Add
              br
              select(id="screenNames" class="select-style" name="screenNames" size="3")
                each screenName in localStorage.getItem('screenNames').split(',')
                  option(selected=screenName == localStorage.getItem('screenName'))=screenName
              button(type="button" id="delete" class="button-style") Remove
          tr
            td.settings-name Count
            td
              input(type="number" id="count" class="input-style" name="count" min="1" value=localStorage.getItem('count'))
          tr
            td.settings-name Time Range
            td
              div(class="select-div")
                select(id="timeRange" name="timeRange")
                  option(value=60 selected=localStorage.getItem('timeRange')==60) Past Minute
                  option(value=3600 selected=localStorage.getItem('timeRange')==3600) Past Hour
                  option(value=86400 selected=localStorage.getItem('timeRange')==86400) Past Day
                  option(value=604800 selected=localStorage.getItem('timeRange')==604800) Past Week
                  option(value=Number.MAX_VALUE selected=localStorage.getItem('timeRange')==Number.MAX_VALUE) All
          tr
            td.settings-name Column Order
            td
              select(id="columnOrder" class="input-style" name="columnOrder" size="3" multiple hidden)
                each columnName in localStorage.getItem('columnOrder').split(',')
                  option(id="option"+columnName selected)=columnName
              each columnName in localStorage.getItem('columnOrder').split(',')
                button(type="button" id="button"+columnName class="button-style draggable" draggable="true" ondragstart="dragstart_handler(event)" ondrop="drop_handler(event)" ondragover="dragover_handler(event)" ondragenter="dragenter_handler(event)" ondragleave="dragleave_handler(event)" ondragend="dragend_handler(event)")=columnName
          tr
            td.settings-name Style
            td
              div(class="select-div")
                select(id="style" name="style")
                  option(value='style1' selected=localStorage.getItem('style')=='style1') Default
                  option(value='style2' selected=localStorage.getItem('style')=='style2') Alternate
                  option(value='user' selected=localStorage.getItem('style')=='user') User Profile
          tr
            td
            td
              button(type="button" id="save" class="button-style") Save
            
  script(type="text/javascript").
    $(document).ready(function() {
      // trigger form submit
      $('button#save').click(function() {
        $('form#settings').submit();
      });
      
      $('form#settings').submit(function(event) {
        if ($('select#screenNames option').length == 0) {
          // need at least one screen name
          event.preventDefault();
        } else {
          // prepare form values before submitting
          $('select#columnOrder option').prop('selected', true);
          $('input#screenName').val($('select#screenNames option:selected').val());
          $('select#screenNames').prop('multiple', true);
          $('select#screenNames option').prop('selected', true);
        }
      });
      
      // screenName event handler
      $("select#screenNames").change(function(event) {
        $("input#screenName").val($("select#screenNames option:selected").val());
      });
      
      // add screen name button handler
      $("button#add").click(function() {
        var notFound = true;
        
        // check if already on the list
        $('select#screenNames option').each(function() {
          if ($(this).val().toLowerCase() == $("input#screenName").val().toLowerCase()) {
            notFound = false;
            return false;
          }
        });
        
        // add it if not on list
        if (notFound) {
          $("select#screenNames option").removeAttr('selected');
          $("select#screenNames").append(new Option($("input#screenName").val(), $("input#screenName").val(), true, true));
        }
      });
      
      // remove screen name button handler
      $("button#delete").click(function() {
        $("select#screenNames option:selected").remove();
        $("select#screenNames option").first().prop('selected', true);
        $("select#screenNames").change();
      });
    
      /*
      // initialize draggable element handlers
      $('.draggable').each(function() {
        $(this).attr('draggable','true');
        $(this).bind('dragstart',dragstart_handler);
        //$(this).bind('dragend', dragend_handler);
        //$(this).bind('dragexit', dragexit_handler);
      });
      
      // initialize droppable element handlers
      $('.droppable').each(function() {
        $(this).bind('drop', drop_handler);
        $(this).bind('dragover',dragover_handler);
        $(this).bind('dragenter',dragenter_handler);
        $(this).bind('dragleave', dragleave_handler);
      });
      */
    });
    
    /*
     * Drag and drop handlers
     */
    
    /*
    function allowDrop(event) {
      event.preventDefault();
    }

    function drag(event) {
      event.dataTransfer.setData("sourceId", event.target.id);
    }

    function drop(event) {
      event.preventDefault();
      var sourceId = event.dataTransfer.getData("sourceId");
      
      // do nothing if dropped on the same element
      if (event.target.id == sourceId) {
        return;
      }
      
      // swap elements
      var sourceElement = document.getElementById(sourceId);
      var targetElement = event.target;
      var sourceElementClone = sourceElement.cloneNode(true);
      var targetElementClone = targetElement.cloneNode(true);
      var sourceOptionId = sourceElement.id.replace('button', 'option');
      var targetOptionId = targetElement.id.replace('button', 'option');
      
      targetElement.parentElement.replaceChild(sourceElementClone, targetElement);
      sourceElement.parentElement.replaceChild(targetElementClone, sourceElement);
      
      // swap select elements
      var sourceOption = document.getElementById(sourceOptionId);
      var targetOption = document.getElementById(targetOptionId);
      var sourceOptionClone = sourceOption.cloneNode(true);
      var targetOptionClone = targetOption.cloneNode(true);
      
      targetOption.parentElement.replaceChild(sourceOptionClone, targetOption);
      sourceOption.parentElement.replaceChild(targetOptionClone, sourceOption);
    }
    */
    
    var dragstart_handler = function(event) {
      event.dataTransfer.setData("sourceId", event.target.id);
    }
    
    var dragover_handler = function(event) {
      event.preventDefault();
    }
    
    var drop_handler = function(event) {
      event.preventDefault();
      var sourceId = event.dataTransfer.getData("sourceId");
      
      // do nothing if dropped on the same element
      if (event.target.id == sourceId) {
        return;
      }
      
      
      var sourceElement = document.getElementById(sourceId);
      var targetElement = event.target;
      
      // cleanup classes
      $(sourceElement).removeClass("dragentered");
      $(targetElement).removeClass("dragentered");
      
      var sourceElementClone = sourceElement.cloneNode(true);
      var targetElementClone = targetElement.cloneNode(true);
      var sourceOptionId = sourceElement.id.replace('button', 'option');
      var targetOptionId = targetElement.id.replace('button', 'option');
      
      // swap elements
      targetElement.parentElement.replaceChild(sourceElementClone, targetElement);
      sourceElement.parentElement.replaceChild(targetElementClone, sourceElement);
      
      // swap select elements
      var sourceOption = document.getElementById(sourceOptionId);
      var targetOption = document.getElementById(targetOptionId);
      var sourceOptionClone = sourceOption.cloneNode(true);
      var targetOptionClone = targetOption.cloneNode(true);
      
      targetOption.parentElement.replaceChild(sourceOptionClone, targetOption);
      sourceOption.parentElement.replaceChild(targetOptionClone, sourceOption);
    }
    
    var dragenter_handler = function(event) {
      event.preventDefault();
      $(event.target).addClass("dragentered");
    }
    
    var dragleave_handler = function(event) {
      $(event.target).removeClass("dragentered");
    }
    
    var dragend_handler = function(event) {
      $(event.target).removeClass("dragentered");
    }
    
    